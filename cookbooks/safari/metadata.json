{
  "name": "safari",
  "description": "Configures Safari browser",
  "long_description": "# Safari Cookbook\n\n[![Cookbook Version](http://img.shields.io/cookbook/v/safari.svg?style=flat-square)][cookbook]\n[![Build Status](http://img.shields.io/travis/dhoer/chef-safari.svg?style=flat-square)][travis]\n[![GitHub Issues](http://img.shields.io/github/issues/dhoer/chef-safari.svg?style=flat-square)][github]\n\n[cookbook]: https://supermarket.chef.io/cookbooks/safari\n[travis]: https://travis-ci.org/dhoer/chef-safari\n[github]: https://github.com/dhoer/chef-safari/issues\n\nThis cookbook provides a `safari_version` library method to retrieve Safari version installed, and a\n`safari_extension` resource to install Safari extensions.\n\n## Requirements\n\n- User must be logged into GUI before calling safari_extension (see \n[macosx_gui_login](https://supermarket.chef.io/cookbooks/macosx_gui_login) cookbook)\n- Chef 11.14 or higher (sensitive attribute introduced)\n\n### Platforms\n\n- Mac OS X Mavericks (10.9) or higher\n\n## Usage\n\nInclude the safari as a dependency to make library method and extension resource available.\n\n### safari_version\n\nThe safari_version retrieves CFBundleShortVersionString by default:\n\n```ruby\nversion = safari_version # => 8.0.4\n```\n\nYou can return other version types by passing the name (e.g. BuildVersion, CFBundleVersion, ProjectName or\nSourceVersion)\n\n```ruby\nbundle_version = safari_version('CFBundleVersion') # => 10600.4.10.7\n```\n\n**Tip:** use allow_any_instance_of to stub safari_version method when testing with rspec:\n\n```ruby\nallow_any_instance_of(Chef::Recipe).to receive(:safari_version).and_return('8.0.4')\n```\n\n### safari_extension\n\nInstalls Safari extensions. User must be logged into GUI before calling safari_extension (see \n[macosx_gui_login](https://supermarket.chef.io/cookbooks/macosx_gui_login) cookbook).\n\n#### Attribute\n\n- `safariextz` (required) - Path to Safari extension to install. Defaults to the name of the resource block.\n\n#### Example\n\nInstall a Safari extension:\n\n```ruby\nsafari_extension 'a safari extension' do\n  safariextz '/path/to/a.safariextz'\n  action :install\nend\n```\n\n## ChefSpec Matchers\n\nThis cookbook includes a custom [ChefSpec](https://github.com/sethvargo/chefspec) matcher you can use to test your\nown cookbooks.\n\nExample Matcher Usage\n\n```ruby\nexpect(chef_run).to install_safari_extension('a safari extension').with(\n  safariextz: '/path/to/a.safariextz')\n```\n\nCookbook Matcher\n\n- install_safari_extension(safariextz)\n\n\n## Getting Help\n\n- Ask specific questions on [Stack Overflow](http://stackoverflow.com/questions/tagged/chef-safari).\n- Report bugs and discuss potential features in [Github issues](https://github.com/dhoer/chef-safari/issues).\n\n## Contributing\n\nPlease refer to [CONTRIBUTING](https://github.com/dhoer/chef-safari/blob/master/CONTRIBUTING.md).\n\n## License\n\nMIT - see the accompanying [LICENSE](https://github.com/dhoer/chef-safari/blob/master/LICENSE.md) file for details.\n",
  "maintainer": "Dennis Hoer",
  "maintainer_email": "dennis.hoer@gmail.com",
  "license": "MIT",
  "platforms": {
    "mac_os_x": ">= 10.9"
  },
  "dependencies": {

  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "1.0.1",
  "source_url": "https://github.com/dhoer/chef-safari",
  "issues_url": "https://github.com/dhoer/chef-safari/issues"
}
